
# Test exploit via gno.mod

# Set up GNOROOT in the current directory.
mkdir $WORK/gnovm
symlink $WORK/gnovm/stdlibs -> $GNOROOT/gnovm/stdlibs
env GNOROOT=$WORK

gno test -verbose ./examples/gno.land/r/demo/admin

gno test -verbose ./examples/gno.land/r/demo/exploit

-- examples/gno.land/r/demo/vault/vault.gno --
package vault

import "std"

func GetMoney() bool {
     println("prevrealm:", std.PrevRealm())
     if std.PrevRealm().PkgPath() != "gno.land/r/demo/admin" {
        return false
     }
     return true
}

-- examples/gno.land/r/demo/admin/gno.mod --
module gno.land/r/demo/admin

-- examples/gno.land/r/demo/admin/admin.gno --
package admin

import (
       "gno.land/r/demo/vault"
)

func GetMyMoney() bool {
     return vault.GetMoney()
}

-- examples/gno.land/r/demo/admin/admin_test.gno --
package admin

import (
       "testing"

       "gno.land/r/demo/vault"
)

func TestGetMyMoney(t *testing.T) {
     res := vault.GetMoney()
     if !res {
        t.Errorf("require: true")
     }
}


-- examples/gno.land/r/demo/exploit/gno.mod --
module gno.land/r/demo/admin

-- examples/gno.land/r/demo/exploit/exploit.gno --
package exploit

import (
       "gno.land/r/demo/vault"
)

func GetMyMoney() bool {
     return vault.GetMoney()
}

-- examples/gno.land/r/demo/exploit/exploit_test.gno --
package exploit

import (
       "testing"

       "gno.land/r/demo/vault"
)

func TestGetMyMoney(t *testing.T) {
     res := vault.GetMoney()
     if res {
        t.Errorf("require: false")
     }
}
